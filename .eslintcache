[{"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\index.js":"1","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\App.js":"2","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\EmployeeList.js":"3","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\contexts\\EmployeeContext.js":"4","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Employee.js":"5","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\AddForm.js":"6","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Pagination.js":"7","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\EditForm.js":"8","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Search.js":"9"},{"size":225,"mtime":1613396784000,"results":"10","hashOfConfig":"11"},{"size":464,"mtime":1657442982261,"results":"12","hashOfConfig":"11"},{"size":3653,"mtime":1657452405815,"results":"13","hashOfConfig":"11"},{"size":2555,"mtime":1657451653852,"results":"14","hashOfConfig":"11"},{"size":2113,"mtime":1657441074368,"results":"15","hashOfConfig":"11"},{"size":2210,"mtime":1657452174091,"results":"16","hashOfConfig":"11"},{"size":1507,"mtime":1657448170737,"results":"17","hashOfConfig":"11"},{"size":2241,"mtime":1657441649496,"results":"18","hashOfConfig":"11"},{"size":405,"mtime":1657442435154,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"odli4z",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\index.js",[],["41","42"],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\App.js",[],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\EmployeeList.js",["43","44"],"import { Modal, Button, Alert} from 'react-bootstrap';\nimport {useContext, useEffect, useState } from 'react';\nimport {EmployeeContext} from '../contexts/EmployeeContext';\nimport Employee from './Employee';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\nimport Search from '../components/Search';\n \n\nconst EmployeeList = () => {\n\n    const {sortedEmployees} = useContext(EmployeeContext);\n\n    const [showAlert, setShowAlert] = useState(false);\n\n    const [show, setShow] = useState(false);\n    \n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n    //const handleShowAlert = () =>setShowAlert(true);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [employeesPerPage] = useState(6);\n\n    const [searchText , setSearchText] = useState('');\n\n\n    const handleShowAlert = () => {\n        setShowAlert(true);\n        setTimeout(()=> {\n            setShowAlert(false);\n        }, 2000)\n    }\n\n    useEffect(() => {\n        handleClose();\n\n        return () => {\n            handleShowAlert();\n        }\n    }, [sortedEmployees])\n\n    const indexOfLastEmployee = currentPage * employeesPerPage;\n    const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n    const currentEmployees = sortedEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n    const totalPagesNum = Math.ceil((sortedEmployees.length) / employeesPerPage);\n\n\n    return (\n    <>\n    <div className=\"table-title\">\n        <div className=\"row\">\n            <div className=\"col-sm-6\">\n                <h2>Algo<b>Bulls</b></h2>\n            </div>\n            <div className=\"col-sm-6\">\n                <Button onClick={handleShow} className=\"btn btn-success\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE147;</i> <span>Add New Note</span></Button>\t\t\t\t\t\n            </div>\n        </div>\n    </div>\n    <div>\n        <Search handleSearchNote={setSearchText}/>\n    </div>\n    \n    <Alert show={showAlert} variant=\"success\">\n        Notes Updated Succefully!\n    </Alert>\n\n    <table className=\"table table-striped table-hover\">\n        <thead>\n            <tr>\n                <th>Heading</th>\n                <th>Deadline</th>\n                <th>Note</th>\n                <th>Time</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n\n       \n            <tbody>\n\n                {\n                  currentEmployees.filter((val)=>{\n                    if(searchText==\"\"){\n                        return val\n                    }else if(val.heading.toLowerCase().includes(searchText.toLowerCase())){\n                        return val\n                    }\n                  }).map(employee => (\n                      <tr key={employee.id}>\n                        <Employee employee={employee} />\n                    </tr>\n                  ))  \n                   \n               \n                }\n                \n\n        </tbody>\n         \n \n\n          \n\n         \n    </table>\n\n    <Pagination pages = {totalPagesNum}\n                setCurrentPage={setCurrentPage}\n                currentEmployees ={currentEmployees}\n                sortedEmployees = {sortedEmployees} />\n\n    <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>\n                Add Note\n            </Modal.Title>\n        </Modal.Header> \n        <Modal.Body>\n            <AddForm />\n        </Modal.Body>\n        <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close Button\n                </Button>\n        </Modal.Footer>\n    </Modal>\n    </>\n    )\n}\n\nexport default EmployeeList;","C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\contexts\\EmployeeContext.js",[],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Employee.js",[],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\AddForm.js",[],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Pagination.js",[],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\EditForm.js",[],["45","46"],"C:\\Users\\HP\\OneDrive\\Documents\\web_d\\hackathons\\apply\\man-emp-main\\src\\components\\Search.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":84,"column":48,"nodeType":"53","messageId":"54","endLine":84,"endColumn":50},{"ruleId":"55","severity":1,"message":"56","line":85,"column":34,"nodeType":"57","messageId":"58","endLine":85,"endColumn":36},{"ruleId":"47","replacedBy":"59"},{"ruleId":"49","replacedBy":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["61"],["62"],"no-global-assign","no-unsafe-negation"]